package com.example.to_dolist.di

import android.app.Application
import androidx.room.Room
import com.example.to_dolist.NoteDatabase
import com.example.to_dolist.data.local.NoteDao
import com.example.to_dolist.repo.NoteRepositoryImpl
import dagger.Module
import dagger.Provides
import dagger.hilt.InstallIn
import dagger.hilt.components.SingletonComponent
import javax.inject.Singleton

@Module
@InstallIn(SingletonComponent::class)
object AppModule {

    @Provides
    @Singleton
    fun provideNoteDatabase(app: App): NoteDatabase {
      return Room.databaseBuilder(
          context = app,
          klass = NoteDatabase::class.java,
          name = "notes_database"
         ).fallbackToDestructiveMigration()
          .build()
    }

    @Provides
    @Singleton
    fun provideNoteDao(database: NoteDatabase): NoteDao {
        return database.noteDao()
    }


    /*Seeding the the database with data*/

//    @Provides
//    @Singleton
//    suspend fun provideRandomNotes(noteDao: NoteDao) {
//            val randomNotes = generateRandomNote()
//            noteDao.insertNote(randomNotes)
//    }
//
//    private fun generateRandomNote(): Notes {
//        val randomTitle = "Another Test"
//        val randomContent = "This is a random note content generated by me in hilt Again!!"
//        return Notes(
//            title = randomTitle,
//            content = randomContent,
//            id = 2,
//            date = "22/03/2024"
//        )
//    }
}